<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    tools:ignore="MissingConstraints"
    android:id="@+id/constraintLayout">

    <!--线性定位：水平垂直约束最少各一个-->
    <Button
        android:id="@+id/button1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <!--角度定位：圆心，角度（从正上方顺时针），距离-->
    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintCircle="@id/button1"
        app:layout_constraintCircleAngle="90"
        app:layout_constraintCircleRadius="100dp" />

    <!--居中：
    水平居中：
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintEnd_toEndOf="parent"
    垂直居中：
    app:layout_constraintTop_toTopOf="parent"
    app:layout_constraintBottom_toBottomOf="parent"
    -->
    <Button
        android:id="@+id/button3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"/>

    <!--沿着某个控件的边居中
    左边居中：
    app:layout_constraintStart_toStartOf="@id/button3"
    app:layout_constraintEnd_toStartOf="@id/button3"
    下边居中：
    app:layout_constraintBottom_toBottomOf="@id/button3"
    app:layout_constraintTop_toBottomOf="@id/button3"
    -->
    <TextView
        android:id="@+id/text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="@id/button3"
        app:layout_constraintTop_toBottomOf="@id/button3"
        android:background="@color/colorAccent"
        android:text="@string/constraint_layout"/>

    <!--占满
    占满父控件：match_parent - android:layout_width="match_parent"
    占满约束：0dp - android:layout_width="0dp"
    -->
    <Button
        android:id="@+id/button4"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button1"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <Button
        android:id="@+id/button5"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button4"
        app:layout_constraintStart_toStartOf="@id/button1"
        app:layout_constraintEnd_toEndOf="@id/button2"/>

    <!--权重
    水平权重：app:layout_constraintHorizontal_weight
        控件宽度0，每个控件的左右约束都要定义
    垂直权重：app:layout_constraintVertical_weight
        控件高度0，每个控件的上下约束都要定义
    -->
    <Button
        android:id="@+id/button6"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button5"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@id/button7"
        app:layout_constraintHorizontal_weight="2"/>
    <Button
        android:id="@+id/button7"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/button6"
        app:layout_constraintStart_toEndOf="@id/button6"
        app:layout_constraintEnd_toStartOf="@id/button8"
        app:layout_constraintHorizontal_weight="2"/>
    <Button
        android:id="@+id/button8"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/button7"
        app:layout_constraintStart_toEndOf="@id/button7"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_weight="1" />

    <!--基线对齐：确定垂直位置，水平约束依然需要
    app:layout_constraintBaseline_toBaselineOf
    -->
    <TextView
        android:id="@+id/text1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="30sp"
        android:text="@string/constraint"
        app:layout_constraintTop_toBottomOf="@id/button6"
        app:layout_constraintStart_toStartOf="parent"/>
    <TextView
        android:id="@+id/text2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="20sp"
        android:text="@string/layout"
        app:layout_constraintStart_toEndOf="@id/text1"
        app:layout_constraintBaseline_toBaselineOf="@id/text1" />

    <!--限制约束 - 宽高限制在约束范围内（上下约束/左右约束都要定义）
    app:layout_constrainedWidth：宽度约束
    app:layout_constrainedHeight：高度约束
    -->
    <TextView
        android:id="@+id/text3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="@id/text1"
        app:layout_constraintEnd_toEndOf="@id/text1"
        app:layout_constraintTop_toBottomOf="@id/text1"
        android:text="@string/numbers"
        app:layout_constrainedWidth="true"
        app:layout_constrainedHeight="true"/>

    <!--偏向：控件对于约束的距离（上下约束/左右约束都要定义）
    app:layout_constraintHorizontal_bias：水平偏向
    app:layout_constraintVertical_bias：垂直偏向
    -->
    <Button
        android:id="@+id/button9"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/text3"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.3" />

    <!--约束链：改变一组控件的布局方式
    app:layout_constraintHorizontal_chainStyle：水平约束链
        生效的控件需要水平方向左右约束都定义，在生效的第一个控件声明layout_constraintHorizontal_chainStyle
    app:layout_constraintVertical_chainStyle：垂直约束链
        生效的控件需要垂直方向上下约束都定义，在生效的第一个控件声明layout_constraintVertical_chainStyle
    spread：扩散（默认）
    packed：打包
    spread_inside：内部扩散
    -->
    <Button
        android:id="@+id/button10"
        android:layout_width="40dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button9"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@id/button11"
        app:layout_constraintHorizontal_chainStyle="packed" />
    <Button
        android:id="@+id/button11"
        android:layout_width="40dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button9"
        app:layout_constraintStart_toEndOf="@id/button10"
        app:layout_constraintEnd_toStartOf="@id/button12" />
    <Button
        android:id="@+id/button12"
        android:layout_width="40dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button9"
        app:layout_constraintStart_toEndOf="@id/button11"
        app:layout_constraintEnd_toStartOf="@id/button13" />
    <Button
        android:id="@+id/button13"
        android:layout_width="40dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button9"
        app:layout_constraintEnd_toEndOf="parent" />

    <!--宽高比：按照比例设置控件宽高（宽高至少有个0dp）
    app:layout_constraintDimensionRatio="2:1" - W:H = 2:1
    宽=0dp，高=100dp，宽=200dp
    宽=100dp，高=0dp，高=50dp
    宽=0dp，高=0dp
        W,2:1 - 用高度计算宽度，此时高度的上下依赖要指定
        H,2:1 - 用宽度计算高度，此时宽度的左右依赖要指定
    -->
    <Button
        android:id="@+id/button14"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintTop_toBottomOf="@id/text"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintDimensionRatio="H,2:1" />

    <!--百分比布局：对应方向值需要为0dp（父View宽高的百分比，而不是约束区的百分比）
    app:layout_constraintWidth_percent="" - 百分比宽
    app:layout_constraintHeight_percent="" - 百分比高
    -->
    <Button
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toBottomOf="@id/button14"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toStartOf="@id/button8"
        app:layout_constraintWidth_percent="0.5" />

    <!--辅助控件-->
    <!--GuideLine：辅助线
    android:orientation="vertical"：方向
    位置：相对于父View
    app:layout_constraintGuide_percent="0.5"：百分比位置
    app:layout_constraintGuide_begin="100dp"：距离开始100dp
    app:layout_constraintGuide_end="100dp"：距离结束100dp
    -->
    <androidx.constraintlayout.widget.Guideline
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintGuide_percent="0.5" />

    <!--Group：控制一组控件的显示隐藏
    app:constraint_referenced_ids="button1, button2" - 设置控制的控件ids

    val group = findViewById<Group>(R.id.group)
    group.visibility = View.VISIBLE
    -->
    <androidx.constraintlayout.widget.Group
        android:id="@+id/group"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="button1, button2"/>

    <!--Layer：控制一组控件的旋转/缩放/位移
    app:constraint_referenced_ids="button3, button4" - 设置控制的控件ids

    val layer = findViewById<Layer>(R.id.layer)
    layer.rotation = 45f
    -->
    <androidx.constraintlayout.helper.widget.Layer
        android:id="@+id/layer"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="button3, button4"/>

    <!--Barrier：位置屏障（统一控件的边）
    app:constraint_referenced_ids="button5, button6" - 设置控制的控件ids
    app:barrierDirection="end" - 屏障方向
    四个方向：上下左右
    -->
    <androidx.constraintlayout.widget.Barrier
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="button5, button6"
        app:barrierDirection="end"/>

    <!--CustomHelper：自定义helper，对一组控件统一操作
    -->
    <com.xiao.today.basicconstraintlayout.CustomHelper
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="button1, button2, button3"/>

    <!--PlaceHolder：占位符
    通过setContentId将控件放到PlaceHolder处

    findViewById<Placeholder>(R.id.placeholder)
    .setContentId(R.id.button1)
    -->
    <androidx.constraintlayout.widget.Placeholder
        android:id="@+id/placeholder"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"/>

    <!--使用代码添加控件
    val constraintLayout = findViewById<ConstraintLayout>(R.id.constraintLayout)
    ConstraintSet().apply {
        isForceId = false //防⽌布局中有⽆ id 控件时报错
        clone(constraintLayout)
        //将控件添加到底部居中
        connect(R.id.button15, ConstraintSet.BOTTOM, ConstraintSet.PARENT_ID, ConstraintSet.BOTTOM)
        connect(R.id.button15, ConstraintSet.START, ConstraintSet.PARENT_ID, ConstraintSet.START)
        connect(R.id.button15, ConstraintSet.END, ConstraintSet.PARENT_ID, ConstraintSet.END)
    }.applyTo(constraintLayout)
    -->
    <Button
        android:id="@+id/button15"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>


    <!--Flow：对一组控件统一排列（虚拟布局控件）
    app:constraint_referenced_ids="button1, button2" - 统一布局的控件ids
    android:orientation="horizontal" - 方向
    app:flow_horizontalGap="8dp" - 水平边距
    app:flow_wrapMode="chain" - 排列模式
    -->
    <androidx.constraintlayout.helper.widget.Flow
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:constraint_referenced_ids="button1, button2"
        android:orientation="horizontal"
        app:flow_horizontalGap="8dp"
        app:flow_wrapMode="chain" />
</androidx.constraintlayout.widget.ConstraintLayout>